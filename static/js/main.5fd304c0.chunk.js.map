{"version":3,"sources":["utils/turnDraggable.js","text/textManager.js","text/contentEN.js","text/contentPT.js","Components/Languages/Languages.js","Components/TopBar/buttonsFunction.js","Components/TopBar/TopBar.js","Components/Cursor/Cursor.js","Components/TextTyped/TextTyped.js","Components/SectionBar/SectionBar.js","utils/languages.js","Components/TerminalOutput/TerminalOutput.js","Components/Terminal/Terminal.js","index.js"],"names":["turnDraggable","Component","objectSentToDraggableLibrary","useEffect","Draggable","portfolioTextWithTwoLanguages","languages","defaultLanguage","getSectionContent","section","actualLanguage","getSectionName","changeLanguage","language","isValid","Error","supportedLanguages","includes","getSectionNames","contentInAEspecificLanguage","Object","keys","this","aboutme","name","content","rel","target","href","skills","contact","isValidLanguage","convertLanguageInStringToElement","className","Languages","allLanguagesComponent","map","ButtonStates","getNextElement","list","index","length","addDisplayPropertyToElement","element","property","style","display","changeTextColor","color","colorObj","nextElement","nextIndex","nextTextColors","changeBackgroundColors","backgroundColor","nextBackgroundColors","Button","props","onClick","String","len","TopBar","id","document","querySelector","title","Cursor","setCursorStatus","is_on","setState","cursorOnStatus","opacity","changeCursorState","state","componentDidMount","interval","setInterval","timeToUpdate","componentWillUnmount","clearInterval","cursorChar","React","TextTyped","checkIfLeftCharToBeShowed","Boolean","charsToBeShowed","showOneChar","head","tail","newText","textInsideTerminalText","showACharIfIsMissingACharToBeShown","timeToWaitBetweenEachChar","totalTime","text","split","SectionBar","window","addEventListener","renderSection","renderedSection","sectionName","sections","setLanguageFromQueryParamOrBrowserLanguage","languageFromUrl","URLSearchParams","location","search","get","languageFromBrowser","navigator","TerminalOutput","setTimeout","changeSection","updateSectionNameAndClearContent","updateSectionContent","timeToWaitTheCommadIsTyped","sectionContent","updateSectionName","time","textTyped","promptString","ref","TerminalDraggable","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5fd304c0.chunk.js","sourcesContent":["import {useEffect} from 'react'\nimport Draggable from 'draggable_dialog'\n\n\nconst turnDraggable = (Component, objectSentToDraggableLibrary) => {\n  return ( () => {\n    useEffect( () =>\n      new Draggable(objectSentToDraggableLibrary)\n    )\n    return <Component/>\n  })\n}\n\n\nexport default turnDraggable\n","import contentEN from './contentEN.js'\nimport contentPT from './contentPT.js'\n\n\nconst defaultLanguage = \"en\"\nconst languages = {\n  \"en\" : contentEN,\n  \"pt\" : contentPT\n}\n\n\nclass TextManager {\n  constructor(languages, defaultLanguage) {\n    this.languages = languages\n    this.supportedLanguages = Object.keys(languages)\n    this.actualLanguage = defaultLanguage\n  }\n\n\n  getSectionContent = section => {\n    return this.languages[this.actualLanguage][section][\"content\"]\n  }\n\n\n  getSectionName = section => {\n    return this.languages[this.actualLanguage][section][\"name\"]\n  }\n\n\n  changeLanguage = language => {\n    if (this.isValid(language)) {\n      this.actualLanguage = language\n    } else {\n      throw new Error(\"Unsuported language: \" + language )\n    }\n  }\n\n\n  isValid = language => this.supportedLanguages.includes(language)\n\n\n  getSectionNames = () => {\n    let contentInAEspecificLanguage = this.languages[this.actualLanguage]\n    let sectionNames = Object.keys(contentInAEspecificLanguage)\n    return sectionNames\n  }\n}\n\n\nconst portfolioTextWithTwoLanguages = \n  new TextManager(languages, defaultLanguage)\n\n\nconst getSectionContent = portfolioTextWithTwoLanguages.getSectionContent\n\n\nconst getSectionName = portfolioTextWithTwoLanguages.getSectionName\n\n\nconst getSectionNames = portfolioTextWithTwoLanguages.getSectionNames\n\n\nconst changeLanguage = portfolioTextWithTwoLanguages.changeLanguage\n\n\nconst isValidLanguage = portfolioTextWithTwoLanguages.isValid\n\n\nconst supportedLanguages = portfolioTextWithTwoLanguages.supportedLanguages\n\n\nexport {\n  getSectionName, \n  getSectionNames, \n  getSectionContent, \n  supportedLanguages,\n  changeLanguage, \n  isValidLanguage\n}\n\n\n","var contentEN = {\n  aboutme: {\n    name: \"About me\",\n    content: (\n      <>\n        <p>\n          Hi 👋, I'm{\" \"}\n          <a\n            rel=\"noreferrer\"\n            target=\"_blank\"\n            href=\"https://github.com/azmatalvi42\"\n          >\n            Azmat Alvi,\n          </a>\n          <br></br>a BSc Honours Computer Science graduate passionate about\n          designing software, building projects, and writing clean, efficient\n          code.{\" \"}\n        </p>\n        <p>\n          I have a deep curiosity for exploring programming languages and\n          concepts like functional programming, clean code practices, and\n          creating full stack web and mobile applications.\n        </p>\n        <p>\n          I enjoy exploring programming languages, functional programming, and\n          developing full stack web and mobile applications.\n        </p>\n        <p>\n          My portfolio features projects including web apps, APIs, data\n          compression algorithms, databases, and 3D web applications using\n          ThreeJS.\n        </p>\n        <p>\n          Check out my skills section to explore my work, or feel free to reach\n          out!\n        </p>\n      </>\n    ),\n  },\n\n  skills: {\n    name: \"Skills\",\n    content: (\n      <>\n        <p>\n          Passionate about designing scalable solutions, I specialize in full\n          stack web and mobile development, system scripting, and data\n          compression. Check out my{\" \"}\n          <a\n            rel=\"noreferrer\"\n            target=\"_blank\"\n            href=\"https://github.com/azmatalvi42\"\n          >\n            Github\n          </a>{\" \"}\n          to see some of my projects\n        </p>\n        <p>\n          Here is a{\" \"}\n          <a\n            rel=\"noreferrer\"\n            target=\"_blank\"\n            href=\"https://github.com/azmatalvi42/HuffmanEncoding\"\n          >\n            project\n          </a>{\" \"}\n          where I used Huffman encoding for data compression.\n        </p>\n        <p>\n          To develop full stack web applications, I use JavaScript, ReactJS, and\n          ExpressJS. Here's a{\" \"}\n          <a\n            rel=\"noreferrer\"\n            target=\"_blank\"\n            href={\"INSERT LINK FOR FULL STACK PROJECT\"}\n          >\n            web app\n          </a>{\" \"}\n          that I developed with MERN stack.\n        </p>\n        <p>\n          I also have experience with Bash scripting for Operating Systems.\n          Here's a{\" \"}\n          <a\n            rel=\"noreferrer\"\n            target=\"_blank\"\n            href=\"https://github.com/azmatalvi42/ShSystemCheck\"\n          >\n            project\n          </a>{\" \"}\n          that includes a collection of lightweight scripts for monitoring CPU\n          utilization, free memory, and disk usage, along with an email\n          reporting feature.{\" \"}\n        </p>\n      </>\n    ),\n  },\n\n  contact: {\n    name: \"Contact\",\n    content: (\n      <>\n        <p>\n          I am currently in the job market, seeking new graduate opportunities\n          to apply my skills and grow professionally. I am open to contributing\n          to private or open-source projects, or simply having a conversation to\n          share ideas. Feel free to reach out—I’d love to connect!\n        </p>\n        <p>Here is my contact info:</p>\n        <p>\n          {\" \"}\n          💻{\" \"}\n          <a\n            rel=\"noreferrer\"\n            target=\"_blank\"\n            href=\"https://github.com/azmatalvi42?tab=repositories\"\n          >\n            My Github\n          </a>\n        </p>\n        <p>\n          {\" \"}\n          👔{\" \"}\n          <a\n            rel=\"noreferrer\"\n            target=\"_blank\"\n            href=\"https://www.linkedin.com/in/azmat-alvi/\"\n          >\n            My Linkedin\n          </a>\n        </p>\n        <p>\n          {\" \"}\n          📨 <a href=\"mailto:azmatalvi2@gmail.com\">azmatalvi2@gmail.com</a>\n        </p>\n      </>\n    ),\n  },\n};\n\nexport default contentEN;\n","\n\nvar contentPT = {\n  \"aboutme\" : {\n    \"name\" : \"Sobre mim\",\n    \"content\" :\n<>\n<p>\nOi 👋, Eu sou <a rel=\"noreferrer\" target=\"_blank\" href=\"https://www.github.com/raulpy271\">@raulpy271</a>,<br/>\nEu sou estudante de ciência da computação por dois anos e estudante de programação a pelo menos 3. Eu gosto de programar, de pensar como desenhar software, estruturar projetos e como escrever código elegante.\n</p>\n<p>\nAlém disso, eu gosto de estudar linguagens de programação, programação funcional, clean code e de conversar sobre Linux, open-source e tecnologia no geral.\n</p>\n<p>\nEu desenvolvi projetos pessoais onde eu trabalhei com web apps, APIs, bots, e banco de dados. Eu usei conceitos de programação funcional, programação orientada a objetos, REST API e processamento de imagens.\n</p>\n<p>\nVeja a seção sobre minhas skills para ver meus projetos e linguagens que eu usei, ou me contate se tiver interesse.\n</p>\n</>\n  },\n\n\n  \"skills\" : {\n    \"name\" : \"Habilidades\",\n    \"content\" :\n<>\n<p>\nPara trabalhar com processamento de imagem, bots, e automações eu usei Python. Aqui está um <a rel=\"noreferrer\" target=\"_blank\" href=\"https://github.com/raulpy271/telegram_ecommerce\">bot</a> que eu escrevi, e um <a rel=\"noreferrer\" target=\"_blank\" href=\"https://github.com/raulpy271/Fractals-JuliaSet\">script</a> onde usei processamento de imagens para criar um fractal.\n</p>\n<p>\nPara desenvolver web apps e APIs eu utilizei JavaScript, ReactJs e ExpressJS. Veja uma <a rel=\"noreferrer\" target=\"_blank\" href=\"https://github.com/raulpy271/DraggableDialog\">biblioteca</a> que eu desenvolvi com essa linguagem.\n</p>\n<p>\nAlém disso, eu conheço vários conceitos de programação funcional, onde aprendi da linguagem Haskell e JavaScript. Veja esse <a rel=\"noreferrer\" target=\"_blank\" href=\"https://github.com/raulpy271/ValidationMethods\">pacote</a> onde eu usei a beleza do sistema de tipos do Haskell.\n</p>\n<p>\nVeja minha conta no <a rel=\"noreferrer\" target=\"_blank\" href=\"https://github.com/raulpy271\">Github</a> para conhecer mais sobre esses projetos.\n</p>\n</>\n  },\n\n\n  \"contact\" : {\n    \"name\" : \"Contato\",\n    \"content\" : \n<>\n<p>Eu estou aberto para trabalhar em projetos privados ou open-source, ou somente conversar com você, então sinta-se livre para me enviar uma mensagem, eu gostarei de conversar.</p>\n<p>Veja minhas informações de contato:</p>\n<p> 💻 <a rel=\"noreferrer\" target=\"_blank\" href=\"https://github.com/raulpy271\">Meu Github</a></p>\n<p> 👔 <a rel=\"noreferrer\" target=\"_blank\" href=\"https://www.linkedin.com/in/raulpy271/\">Meu Linkedin</a></p>\n<p> 📞 <a rel=\"noreferrer\" target=\"_blank\" href=\"https://t.me/raulpy271\">Meu Telegram</a></p>\n<p> 📨 <a href=\"mailto:raulrufino0@gmail.com\">raulrufino0@gmail.com</a></p>\n</>\n  }\n}\n\n\nexport default contentPT\n","import {supportedLanguages} from '../../text/textManager.js'\nimport './Languages.css'\n\n\nconst convertLanguageInStringToElement = language => (\n  <a \n    className=\"language\"\n    key={language}\n    href={\"?language=\" + language}\n  >\n    {language}\n  </a>\n)\n\n\nconst Languages = () => {\n  let allLanguagesComponent = (\n    supportedLanguages.map(convertLanguageInStringToElement)\n  )\n\n\n  return (\n    <div className=\"languages\">\n      {allLanguagesComponent}\n    </div>\n  )\n}\n\n\nexport default Languages\n","\n\nvar ButtonStates = {\n  \"isHide\" : true,\n  \"textColorsSelected\" : 0,\n  \"backgroundColorsSelected\" : 0,\n  \"textColors\" : [\"#0f0\", \"red\", \"yellow\"],\n  \"backgroundColors\" : \n    [\"rgba(0, 0, 0, 90%)\", \n     \"rgba(0, 0, 0, 60%)\", \n     \"rgba(255, 255, 255, 90%)\"\n    ]\n}\n\n\nconst getNextElement = (list, index) => {\n  let length = list.length\n  if (index + 1 === length) {\n      return [list[0], 0]\n  }\n  return [list[index + 1], index + 1]\n}\n\n\nconst nextBackgroundColors = colorObj => {\n  let [nextElement, nextIndex] = getNextElement(\n    colorObj[\"backgroundColors\"],\n    colorObj[\"backgroundColorsSelected\"])\n  colorObj[\"backgroundColorsSelected\"] = nextIndex\n  return nextElement\n}\n\n\nconst nextTextColors = colorObj => {\n  let [nextElement, nextIndex] = getNextElement(\n    colorObj[\"textColors\"],\n    colorObj[\"textColorsSelected\"])\n  colorObj[\"textColorsSelected\"] = nextIndex\n  return nextElement\n}\n\n\nconst addDisplayPropertyToElement = (element, property) =>\n  element.style.display = property\n\n\nconst changeTextColor = element => \n  element.style.color = nextTextColors(ButtonStates)\n\n\nconst changeBackgroundColors = element => \n  element.style.backgroundColor = nextBackgroundColors(ButtonStates)\n\n\nconst hideOrShowElement = element => {\n  if (ButtonStates[\"isHide\"]) {\n    addDisplayPropertyToElement(element, \"inline\")\n  } else {\n    addDisplayPropertyToElement(element, \"none\")\n  }\n  ButtonStates[\"isHide\"] = ! ButtonStates[\"isHide\"]\n}\n\n\nexport {hideOrShowElement, changeTextColor, changeBackgroundColors}\n","import Languages from '../Languages/Languages.js'\nimport './TopBar.css'\nimport {\n  hideOrShowElement, \n  changeTextColor,\n  changeBackgroundColors\n  } from './buttonsFunction.js'\n\n\nfunction Button(props) {\n  let len = 12\n  let margin = len / 2\n  return (\n    <div \n      className=\"button\"\n      onClick={props.onClick}\n      style={{ \n        \"color\" : props.color,\n          \"backgroundColor\" : props.color,\n          \"width\"  : String(len) + \"px\",\n          \"height\" : String(len) + \"px\",\n          \"marginLeft\" : String(margin) + \"px\"\n      }}\n    >\n    </div>\n  )\n}\n\n\nfunction TopBar(props) {\n  let red    = \"#f00\"\n  let yellow = \"#ff0\"\n  let green  = \"#0f0\"\n\n\n  const redButtonFunction = () => hideOrShowElement(\n    document.querySelector(\"div.languages\")\n  )\n  const yellowButtonFunction = () => changeTextColor(\n    document.querySelector(\"div#terminalDialog\")\n  )\n  const greenButtonFunction = () => changeBackgroundColors(\n    document.querySelector(\"div#terminalDialog\")\n  )\n\n\n  return (\n    <div id=\"topBar\" >\n      <div className=\"buttons\">\n        <Languages/>\n        <Button onClick={redButtonFunction} color={red}/>\n        <Button onClick={yellowButtonFunction} color={yellow}/>\n        <Button onClick={greenButtonFunction} color={green}/>\n      </div>\n      <p id=\"title\" > {props.title} </p>\n    </div>\n  )\n}\n\n\nexport default TopBar\n","import React from 'react'\nimport './Cursor.css'\n\n\nclass Cursor extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state  = {\n      cursorChar : '█',\n      timeToUpdate   : 500,\n      cursorOnStatus : true,\n      opacity : 100\n    }\n  }\n\n\n  setCursorStatus = (is_on) => {\n    if (is_on) {\n      this.setState({\n        cursorOnStatus : true,\n        opacity : 100\n      })\n    } else {\n      this.setState({\n        cursorOnStatus : false,\n        opacity : 0\n      })\n    }\n  }\n\n\n  changeCursorState = () => {\n    this.setCursorStatus(!this.state.cursorOnStatus)\n  }\n\n\n  componentDidMount = () => {\n    this.interval = setInterval(() => {\n      this.changeCursorState() \n    }, this.state.timeToUpdate)\n  }\n\n\n  componentWillUnmount = () => {\n    clearInterval(this.interval)\n  }\n\n\n  render() {\n    let opacity = String(this.state.opacity) + \"%\"\n    return (\n      <strong id=\"cursor\" style={{\"opacity\" : opacity}}>\n        {this.state.cursorChar}\n      </strong>\n    )\n  }\n}\n\n\nexport default Cursor\n","import React from 'react'\nimport Cursor from '../Cursor/Cursor.js';\nimport './TextTyped.css'\n\n\nclass TextTyped extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      timeToWaitBetweenEachChar : props.totalTime / props.text.length,\n      textInsideTerminalText : '',\n      charsToBeShowed : props.text.split('')\n    }\n  }\n\n\n  checkIfLeftCharToBeShowed = () => {\n    return Boolean(String(this.state.charsToBeShowed) !== \"\")\n  }\n\n\n  showOneChar = () => {\n    let [head, ...tail] = this.state.charsToBeShowed\n    let newText = this.state.textInsideTerminalText + head\n    this.setState({\n      textInsideTerminalText : newText,\n      charsToBeShowed : tail\n    })\n  }\n\n\n  showACharIfIsMissingACharToBeShown = () => {\n    if (this.checkIfLeftCharToBeShowed()) {\n      this.showOneChar()\n    } else {\n      clearInterval(this.interval)\n    }\n  }\n\n\n  componentDidMount = () => {\n    this.interval = setInterval(\n      this.showACharIfIsMissingACharToBeShown, \n      this.state.timeToWaitBetweenEachChar\n    )\n  }\n\n\n  render() {\n    return (\n      <div className=\"textTyped\">\n        <p id=\"textTyped\">\n          {this.state.textInsideTerminalText}<Cursor/>\n        </p>\n      </div>\n    )\n  }\n}\n\n\nexport default TextTyped\n","import React from 'react'\nimport {getSectionNames, getSectionName} from '../../text/textManager.js'\nimport './SectionBar.css'\n\n\nclass SectionBar extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      \"sections\" : <></>\n    }\n  }\n\n\n  componentDidMount = () => \n    window.addEventListener(\"load\", this.renderSection)\n\n\n  renderSection = () => {\n    let renderedSection = (\n      <> {getSectionNames().map(sectionName => \n        <a\n          className=\"sectionLinks\"\n          key={sectionName}\n          onClick={() => this.props.onClick(sectionName)}\n          href={\"#\" + sectionName}\n        >\n          {getSectionName(sectionName)}\n        </a>\n      )}</>\n    )\n\n\n    this.setState({\"sections\" : renderedSection})\n  }\n\n\n  render() {\n    return (\n      <p className=\"sections\">\n        {this.state.sections}\n      </p> \n    )\n  }\n}\n\n\nexport default SectionBar\n","import {isValidLanguage, changeLanguage} from '../text/textManager.js'\n\n\nconst getLanguageFromUrlQueryParam = () => {\n  let query = \"language\"\n  let urlParamsObject = new URLSearchParams(window.location.search)\n  return urlParamsObject.get(query)\n}\n\n\nconst getBrowserLanguage = () => {\n  let languageAndCountry = navigator.language\n  let language = languageAndCountry.split(\"-\")[0]\n  return language\n}\n\n\nconst setLanguageFromQueryParamOrBrowserLanguage = () => {\n  let languageFromUrl = getLanguageFromUrlQueryParam()\n  let languageFromBrowser = getBrowserLanguage()\n\n\n  if (isValidLanguage(languageFromUrl)) {\n    changeLanguage(languageFromUrl)\n  } else if (isValidLanguage(languageFromBrowser)) {\n    changeLanguage(languageFromBrowser)\n  }\n}\n\n\nexport {setLanguageFromQueryParamOrBrowserLanguage}\n","import React from \"react\";\nimport TextTyped from \"../TextTyped/TextTyped.js\";\nimport SectionBar from \"../SectionBar/SectionBar.js\";\nimport { getSectionContent } from \"../../text/textManager.js\";\nimport { setLanguageFromQueryParamOrBrowserLanguage } from \"../../utils/languages.js\";\nimport \"./TerminalOutput.css\";\n\nclass TerminalOutput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      timeToWaitTheCommadIsTyped: 1000,\n      section: \"aboutme\",\n      promptString: \"[azmatalvi42]$ \",\n      sectionName: \"\",\n      sectionContent: \"\",\n    };\n  }\n\n  componentDidMount = () => {\n    setLanguageFromQueryParamOrBrowserLanguage();\n    setTimeout(this.changeSection, 1000, this.state.section);\n  };\n\n  changeSection = (section) => {\n    let timeToWaitAfterTheCommandIsTyped = 100;\n    this.updateSectionNameAndClearContent(section);\n    setTimeout(\n      this.updateSectionContent,\n      this.state.timeToWaitTheCommadIsTyped + timeToWaitAfterTheCommandIsTyped,\n      section\n    );\n  };\n\n  updateSectionNameAndClearContent = (section) => {\n    this.setState({\n      section: section,\n      sectionContent: \"\",\n    });\n    this.updateSectionName(section);\n  };\n\n  updateSectionName = (section) => {\n    let text = \"cat \" + section + \".txt\";\n    let time = this.state.timeToWaitTheCommadIsTyped / text.length;\n\n    this.textTyped.setState({\n      timeToWaitBetweenEachChar: time,\n      textInsideTerminalText: \"\",\n      charsToBeShowed: text.split(\"\"),\n    });\n    this.textTyped.componentDidMount();\n  };\n\n  updateSectionContent = (section) => {\n    this.setState({\n      sectionContent: getSectionContent(section),\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <div className=\"outputDiv\">\n          <div className=\"promptDiv\">\n            <p id=\"promptText\">{this.state.promptString}</p>\n            <TextTyped\n              ref={(ref) => (this.textTyped = ref)}\n              totalTime={0}\n              text={\"\"}\n            />\n          </div>\n          <div id=\"outputText\">\n            <br />\n            {this.state.sectionContent}\n          </div>\n        </div>\n\n        <>\n          <SectionBar onClick={this.changeSection} />\n        </>\n      </>\n    );\n  }\n}\n\nexport default TerminalOutput;\n","import turnDraggable from '../../utils/turnDraggable.js'\nimport TopBar from '../TopBar/TopBar.js'\nimport TerminalOutput from '../TerminalOutput/TerminalOutput.js'\nimport './Terminal.css'\n\n\nconst TerminalWindow = () => {\n  let title = \"Terminal\"\n  return (\n    <div id=\"terminalDialog\">\n      <div>\n        <TopBar title={title}/>\n      </div>\n      <div className=\"terminalScreen\">\n        <TerminalOutput/>\n      </div>\n    </div>\n  )\n}\n\n\nconst TerminalDraggable = turnDraggable(TerminalWindow, {\n  \"dialogId\" : \"terminalDialog\",\n  \"elementThatCaptureTheClick\" : \"topBar\",\n  \"centerElement\" : true\n})\n\n\nexport default TerminalDraggable\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport TerminalWindow from './Components/Terminal/Terminal.js'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <TerminalWindow/>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n\n"],"sourceRoot":""}